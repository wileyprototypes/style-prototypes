@import "functions.scss";
@import "mixins.scss";

:root {
  --step-1x: 15px;
  --step-2x: 30px;
}

// table findings (translate to the system you use)

td, th {
	vertical-align: top;
	padding-top: var(--step-1x);
	padding-right: var(--step-2x);
	word-break: break-word;
	&.filename {
		word-break: break-all;
		max-width: 350px;
	}
	&.size, &.title {
		word-break: keep-all;
	}
	&.roles {
		max-width: 250px;
	}
}
sup {
	white-space: nowrap;
}
.orcid {
	background-image: url(orcidid.svg);
	background-repeat: no-repeat;
	padding-left: 31px;
	display: block;
	word-break: keep-all;
}

// cosmetic CSS rules


@include font-face(OpenSans, 
	$path: "fonts/", 
	$file: OpenSans-Regular, 
	$weight: normal, 
	$style: normal, 
	$stretch: normal, 
	$transform: normal
	);
@include font-face(OpenSans, 
	$path: "fonts/", 
	$file: OpenSans-SemiBold, 
	$weight: bold, 
	$style: normal, 
	$stretch: normal, 
	$transform: normal
	);


.container {
	max-width: 1140px;
	width: 100%;
	margin: var(--step-2x) auto;
}

body {
	font-family: OpenSans;
	font-size: 14px;
	text-align: left;
	line-height: 125%;
}

h2 {
	font-size: var(--step-2x);
	color: #005274;
	margin-top: 60px;
	font-weight: normal;
}
.background, header.header, .fixed {
	displaY: none;
}
a {
	color: #005274;
	&:hover {
		color: #2B7999;
	}
}

table {
	margin-bottom: 60px;
}
tr:odd {
	background-color: #eee;
}


div {
	&.name {
		font-weight: bold;
		display: inline-block;
	}
}

// breakpoints, disregard for now

@media (min-width: 600px) { 
	table {
		&.smaller {
			width: 70%;
		}
		&.smallest {
			width: 50%;
		}
	}

}

@media (max-width: 600px) { 
	table {
		width: 100%;
	}
	tr.header {
		display: none;
	}
	div.name {
		font-weight: normal;
	}
	td {
		display: block;
		border: solid 1px #ccc;
		padding: var(--step-1x);
		background-color: #fff;
		
		&:not(:first-of-type) {
			border-top: none;
			padding-top: 10px;
		}
		&:not(:last-of-type) {
			border-bottom: none;
			padding-bottom: 0px;
		}
		&:last-of-type {

			margin-bottom: -3px;
		}

		&:before {
			font-weight: bold;
			display: block;
		}
		&.title:before {
			content: "Title";
		}
		&.name:before {
			content: "Name";
		}
		&.email:before {
			content: "Email";
		}
		&.country:before {
			content: "Country";
		}
		&.roles:before {
			content: "Roles";
		}
		&.filename:before {
			content: "Name";
		}
		&.designation:before {
			content: "Type of File";
		}
		&.size:before {
			content: "Size";
		}
		&.designation:before {
			content: "Type of File";
		}
		&.size:before {
			content: "Size";
		}
	}
}


